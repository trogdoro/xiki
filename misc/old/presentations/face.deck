> Summary

http://xiki.org


> Summary

http://xiki.org

- Interact with the browser


> Summary

http://xiki.org

- Interact with the browser
- Make user interfaces


> Demo

face/
  + complexion/
  + eyes/
  - hair/
    - conservative/
    - futuristic/
    - unicorn/
  + reset/

> Code

- ~/menu/
  + face.menu


> Code

- ~/menu/
  + face.menu
  + face.rb


> Make simple menu

- dumbed-down version

mood/


> Make simple menu

- dumbed-down version

mood/
  happy/
  sad/


> Make simple menu

- dumbed-down version

mood/
  happy/
    :)
  sad/


> Make simple menu

- dumbed-down version

mood/
  happy/
    :)
  sad/
    :(


> Make simple menu

- dumbed-down version

mood/
  happy/
    :)
  sad/
    :(

Browser.html ":)"


> Make simple menu

- dumbed-down version

- ~/menu/
  + mood.menu


> Make simple menu

- dumbed-down version

- ~/menu/
  + mood.menu
  + mood.rb


> Make simple menu

- dumbed-down version

- ~/menu/
  - mood.menu
    | happy/
    | sad/
  + mood.rb


> Make simple menu

- dumbed-down version

- ~/menu/
  - mood.menu
    | happy/
    | sad/
  - mood.rb
    | class Moods
    |   def self.menu mood
    |     if mood == "happy"
    |       Browser.html ":)"
    |     else
    |       Browser.html ":("
    |     end
    |   end
    | end


> Make simple menu

- "Pretend like it works"


> Make simple menu

mood/
  + happy/
  + sad/

- /Users/craig/menu/
  - mood.menu
    | - happy/
    | - sad/


> Make menus do something

- "Pretend like it works"


> Make menus do something

mood/
  - happy/
  - sad/


> Other ways to make menus

- /Users/craig/menu/
  + mood.menu
  + mood.rb


> Just menu

sleep/
  - status/
    @ Browser.html "| ( asleep"
    @ Browser.html "8( awake"


> Just menu

sleep/
  + status/
  - pictures/
    @google images/sleep/


> Other ways to make menus

- /Users/craig/menu/
  + mood.menu
  + mood.rb


> Just class
class States
  def self.favorite
    "
    - Arizado/
    - South Alacheussets/
    "
  end
  def self.time_zones
    "I don't know any"
  end
end

states/


> Just class
class Addresses
  def self.menu
    "
    .states/
      - Ohio/
      - California/
      - Florida/
    .zip codes/
    "
  end
  def self.states state
    "Abbreviation: #{state[/../].upcase}"
  end
end

addresses/
  states/
    - Ohio/
      Abbreviation: OH
    + California/
    + Florida/
  zip codes/


> Blocks

Menu.abc { |path| "You passed '#{path}'" }

abc/
  You passed 'abc/'

  hey/
    You passed 'abc/hey/'


> Patterns

Launcher.add(/^aaa/) { Tree << "hi" }

aaaah/
  hi


> Other things in menus

- Headings and notes

food/
  > Lunch
  @google images/salad

  > Dinner
  @google images/pizza

  - todo/
    > Breakfast
    Decide what to do about
    breakfast!

> Shell commands

disk usage/
  > Disk usage on all volumes
  @ $ df
    | Filesystem    512-blocks      Used Available Capacity  Mounted on
    | /dev/disk0s2   583197008 217048744 365636264    38%    /
    | devfs                215       215         0   100%    /dev
    | /dev/disk0s3   392642192    590536 392051656     1%    /Volumes/Ashbury
    | map -hosts             0         0         0   100%    /net
    | map auto_home          0         0         0   100%    /home


> The End

"Like a Shell Terminal but Better"

http://xiki.org


